@using Marketplace_portal.Models;
@using Newtonsoft.Json;

@{
    ProductSearchModel productObject = ViewData["productObject"] as ProductSearchModel;

    //string[] productNames = (string[])ViewData["productNames"];
    //String[] productsNames = new string[Products.products.Count()];

    //for (var i = 0; i < Products.products.Count(); i++)
    //{
    //    productsNames[i] = Products.products[i].ProductName;
    //}

    //foreach(tblProduct p in Products){
    //    productsNames.Add(p.ProductName);
    //}

    //productsNames = List.ToArray();

    Layout = null;

}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ViewBag.Title</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    <script src="//code.jquery.com/jquery-1.12.4.js"></script>
    <script src="//code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
</head>
<body>
    @*@productNames[0]
    @{
        foreach (String p in productNames)
        {
            @p <br />
        }
    }*@

    <form action="/action_page.php">
        <select name="departments" id="departments">
            <option value="All" selected disabled hidden>Departments</option>
            <option value="All">All</option>
            @{
                foreach (string productName in productObject.productNames)
                {
                    <option value="@productName">@productName</option>

                    //dict[@productObject.subcategoryID[i]] -> returns departmentName
                }
            }
        </select>
        <input id="autocomplete">
        <input type="submit" value="Submit">
    </form>


    @*<label for="autocomplete">Search: </label>*@



</body>
</html>

<script type="text/javascript">
    @*$(document).ready(function () {
        @foreach ViewData[""]
    });*@

    $("#autocomplete").autocomplete({


        
        source: @Html.Raw(JsonConvert.SerializeObject(productObject.productNames)),
    });
</script>

@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductImage)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Model)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Series)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModelYear)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.tblManufacturer.ManufacturerName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.tblSubcategory.SubcategoryName)
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductImage)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Model)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Series)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModelYear)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.tblManufacturer.ManufacturerName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.tblSubcategory.SubcategoryName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.ProductID }) |
                @Html.ActionLink("Details", "Details", new { id=item.ProductID }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.ProductID })
            </td>
        </tr>
    }

    </table>*@
